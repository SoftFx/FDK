namespace SoftFX.Extended.Errors
{
    using System;
    using System.Runtime.Serialization;
    using System.Security.Permissions;

    /// <summary>
    /// Provides extended data for errors; generated by API.
    /// </summary>
    [Serializable]
    public class RuntimeException : ApplicationException
    {
        internal RuntimeException(string message)
            : base(message)
        {
        }

        internal RuntimeException(string message, Exception innerException)
            : base(message, innerException)
        {
        }

        internal RuntimeException(int status, string message)
            : base(message)
        {
            this.Status = status;
        }

        internal RuntimeException(int status, string message, Exception innerException)
            : base(message, innerException)
        {
            this.Status = status;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="info"></param>
        /// <param name="context"></param>
        [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
        protected RuntimeException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
            this.Status = info.GetInt32("Status");
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="info"></param>
        /// <param name="context"></param>
        [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData(info, context);
            info.AddValue("Status", this.Status);
        }

        /// <summary>
        /// Native code error.
        /// </summary>
        public int Status { get; internal set; }
    }
}
